var search_data = {"index":{"searchIndex":["mymodule","input","othermodule","output","shape","do_fun_things()","get_dob()","is_anagram?()","letters_of()","new()","say_hello()","some_method()"],"longSearchIndex":["mymodule","mymodule::input","othermodule","othermodule::output","shape","shape#do_fun_things()","shape#get_dob()","shape#is_anagram?()","shape#letters_of()","shape::new()","shape#say_hello()","shape#some_method()"],"info":[["MyModule","","MyModule.html","",""],["MyModule::Input","","MyModule/Input.html","",""],["OtherModule","","OtherModule.html","",""],["OtherModule::Output","","OtherModule/Output.html","",""],["Shape","","Shape.html","","<p>This class represents an arbitrary shape by a series of points.\n<p>Author &mdash; FuShengYang (sysuyangkang@gmail.com …\n"],["do_fun_things","Shape","Shape.html#method-i-do_fun_things","()","<p>This method does fun things\n<p>Example\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">a</span>.<span class=\"ruby-identifier\">do_fun_things</span>\n</pre>\n"],["get_dob","Shape","Shape.html#method-i-get_dob","(person)","<p>Extract the age and calculate the date-of-birth. The DOB is returned as a\nTime object.\n"],["is_anagram?","Shape","Shape.html#method-i-is_anagram-3F","(text)","<p>Test to see if a new word contains the same letters as the original\n"],["letters_of","Shape","Shape.html#method-i-letters_of","(text)","<p>Determine the letters in a word or phrase\n<p>all letters are converted to lower case\n<p>anything not a letter …\n"],["new","Shape","Shape.html#method-c-new","(polyline)","<p>Creates a new shape described by a <code>polyline</code>.\n<p>If the <code>polyline</code> does not end at the same point it started …\n"],["say_hello","Shape","Shape.html#method-i-say_hello","()","<p>Remember the letters in the initial word\n"],["some_method","Shape","Shape.html#method-i-some_method","(*a)","<p>call some method\n"]]}}